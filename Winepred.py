# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lEgNb3eQ6eBgW66hlUeU6sl6lsXNK7sk
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')

df=pd.read_csv('WineQT.csv')
df

df.isnull().sum()   # finding null values

x=df.drop(columns=['quality'])            #spliting input and output columns
y=df['quality']

y

import sklearn
from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)   # spliting training  and test

from sklearn.ensemble import RandomForestClassifier
rfc=RandomForestClassifier()
rfc.fit(x_train,y_train)

a=rfc.predict(x_test)

a

from sklearn.metrics import accuracy_score

accuracy_score(y_test,a)

#"""# **Pickling the model**"""

import pickle
pickle_out=open('rfc.pkl','wb')
pickle.dump(rfc,pickle_out)
pickle_out.close()

print(pickle_out.read)

pickle_in=open('rfc.pkl','rb')

l=pickle.load(pickle_in)

import streamlit as st

def prediction(fixed_acidity,volatile_acidity,citric_acid,residual_sugar,chlorides,free_sulfur_dioxide,total_sulfur_dioxide,density,pH,sulphates,alcohol):
  prediction=rfc.predict([[fixed_acidity,volatile_acidity,citric_acid,residual_sugar,chlorides,free_sulfur_dioxide,total_sulfur_dioxide,density,pH,sulphates,alcohol]])
  print (prediction)

  return prediction

def main():
  st.title('Wine Quality Prediction')
  html_temp="""
  <div style="background-color:tomato;padding:10px">
  <h2 style="color:white;text-align:center;">Streamlit Wine Quality Prediction ML App </h2>
  </div>
  """
  st.markdown(html_temp,unsafe_allow_html=True)
  fixed_acidity=st.text_input('fixed_acidity')
  volatile_acidity=st.text_input('volatile_acidity')
  citric_acid=st.text_input('citric_acid')
  residual_sugar=st.text_input('residual_sugar')
  chlorides=st.text_input('chlorides')
  free_sulfur_dioxide=st.text_input('free_sulfur_dioxide')
  total_sulfur_dioxide=st.text_input('total_sulfur_dioxide')
  density=st.text_input('density')
  pH=st.text_input('pH')
  sulphates=st.text_input('sulphates')
  alcohol=st.text_input('alcohol')
  result=""
  if st.button('Predict'):
    result=prediction
    print(result)
  st.success('The output is {}'.format(result))
if __name__=='__main__':
    main()